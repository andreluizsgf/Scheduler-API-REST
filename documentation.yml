## backend gostack
## Author: Gabriel
## Deion: Api para testes
openapi: 3.0.2

## Descrição e dados de suporte do projeto
info:
  title: GoStack
  version: '1.0'
  deion: Documentação API do GoStack

## Endereços da API
servers:
- url: http://localhost:3001
  deion: Endpoint Desenvolvimento
# - url: http://localhost:3001
#   deion: Endpoint Produção

## Categorias
tags:
- name: Repositories
  deion: Dados repositórios

## Componentes de segurança e modelos de resposta
components:
  schemas:

    # Modelo para Erros
    ErrorModel:
      deion: Modelo de erros
      type: object
      required:
      - message
      - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600

    # Modelo para Repositório
    RepositoryModel:
      deion: Modelo de Repositório
      type: object
      required:
      - id
      - title
      - url
      - techs
      - likes
      properties:
        id:
          type: string
        title:
          type: string
        url:
          type: string
        techs:
          type: array
          items:
            type: string
        likes:
          type: integer
          
  # Exemplos
  examples:

    # Resposta de exemplo
    ErrorExample:
      summary: Exemplo de erro
      value:
        message: teste
        code: 10

paths:
  "/repositories":
    
    get:
      tags:
        - Repositories
      summary: Lista todos os repositórios
      deion: Lista todos os repositórios cadastrados na plataforma
      responses:
        '200':
          deion: Lista de todos os administradores cadastrados
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lista de repositórios!
                  repositories:
                    type: array
                    items:
                      "$ref": "#/components/schemas/RepositoryModel"
                  status:
                    type: boolean
                    example: true
                required:
                - message
                - status
                  
        '400':
          deion: Erro de autenticação, verifique as credenciais do usuário.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"

    post:
      tags:
      - Repositories
      summary: Cadastra um novo repositório
      deion: Cadastra um novo repositório na plataforma.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Projeto pra Test
                url:
                  type: string
                  example: https://github.com/Rocketseat/umbriel
                techs:
                  type: array
                  items:
                    type: string
                  example:
                    ["Express", "nodejs"]

      responses:
        '201':
          deion: Repositório cadastrado com sucesso. Retorna objeto.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Repositório cadastrado com sucesso!
                  repository:
                      "$ref": "#/components/schemas/RepositoryModel"
                  status:
                    type: boolean
                    example: true
                required:
                - message
                - status
                
        '400':
          deion: Erro de autenticação, verifique as credenciais do usuário.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"

  "/repositories/{id}":

    put:
      tags:
      - Repositories
      summary: Cadastra um novo repositório
      deion: Cadastra um novo repositório na plataforma.
      parameters:
      - name: id
        required: true
        deion: ID do Repositório
        in: path
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Projeto pra Test
                url:
                  type: string
                  example: https://github.com/Rocketseat/umbriel
                techs:
                  type: array
                  items:
                    type: string
                  example:
                    ["Express", "nodejs", "type"]

      responses:
        '200':
          deion: Repositório editado com sucesso. Retorna objeto.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Repositório editado com sucesso!
                  repository:
                      "$ref": "#/components/schemas/RepositoryModel"
                  status:
                    type: boolean
                    example: true
                required:
                - message
                - status
                
        '400':
          deion: Erro de autenticação, verifique as credenciais do usuário.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"

    delete:
      tags:
      - Repositories
      summary:  Exclui repositório
      deion: Exclui repositório na plataforma.
      parameters:
      - name: id
        required: true
        deion: ID do Repositório
        in: path
        schema:
          type: string

      responses:
        '204':
          deion: Repositório excluido com sucesso. Retorna objeto.

                
        '400':
          deion: Erro de autenticação, verifique as credenciais do usuário.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"

  "/repositories/{id}/like":

    post:
      tags:
      - Repositories
      summary:  Dá like num repositório
      deion: Dá like num repositório na plataforma.
      parameters:
      - name: id
        required: true
        deion: ID do Repositório
        in: path
        schema:
          type: string

      responses:
        '201':
          deion: Like feito com sucesso!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sucesso ao dar o like!
                  status:
                    type: boolean
                    example: true
                required:
                - message
                - status

                
        '400':
          deion: Erro de autenticação, verifique as credenciais do usuário.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"