{"version":3,"sources":["../src/index.js"],"names":["module","exports","key","url","auth","cacheManager","init","competitions","standings","teams","players","matches","id","self","resolve","reject","getData","then","competition","catch","err","compId","standing","team","player","fromDate","Date","toDate","setDate","getDate","fromDateString","toDateString","type","time","checkCache","cache","reqData","undefined","expiration","getTime","request","data","ensureDir","writeJSON","spaces","readJSON","callback"],"mappings":"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","file":"index.js","sourcesContent":["import {\n    Competition,\n    Standing,\n    Team,\n    Player,\n    Match,\n    getJSON,\n    createObject,\n    createStringFromDate,\n} from './lib';\nimport Promise from 'promise';\nimport fs from 'fs-extra';\nimport {watch, unwatch, callWatchers} from 'watchjs';\n\n/** Class representing wrapper object. */\nexport default module.exports = class NodeScore {\n    /**\n     * creates a NodeScore wrapper object\n     *\n     * @param {string} key - the API Key from http://football-api.com/\n     */\n    constructor(key) {\n        this.url = 'http://api.football-api.com/2.0/';\n        this.auth = `?Authorization=${key}`;\n        this.cacheManager = {\n            init: [false, false],\n            competitions: {},\n            standings: {},\n            teams: {},\n            players: {},\n            matches: {},\n        };\n    };\n\n    /**\n     * returns one competition in promise form\n     *\n     * @param {number} id - the id of the competition\n     * @return {Promise<Competition, Error>} returns a\n     * Promise containing  a Competition object.\n     */\n    competition(id) {\n        let self = this;\n        return new Promise((resolve, reject) => {\n            id = (typeof id !== 'undefined' && id !== null) ? id : '';\n            const url = `${this.url}competitions/${id}${this.auth}`;\n            this.getData('competitions', id, url, (24 * 3600 * 1000))\n                .then((competition) => resolve(\n                    createObject(Competition, self, competition)))\n                .catch((err) => reject(err));\n        });\n    }\n\n    /**\n     * returns multiple competitions in promise form\n     *\n     * @return {Promise<Competition[], Error>} returns a\n     * Promise containing an array of Competition objects.\n     */\n    competitions() {\n        let self = this;\n        return new Promise((resolve, reject) => {\n            const url = `${this.url}competitions/${this.auth}`;\n            this.getData('competitions', 'all', url, (24 * 3600 * 1000))\n                .then((competition) => resolve(\n                    createObject(Competition, self, competition)))\n                .catch((err) => reject(err));\n        });\n    }\n\n    /**\n     * returns one or multiple standings in promise form\n     *\n     * @param {number} compId - the id of the competition\n     * @return {Promise<Standing[], Error>} returns a\n     * Promise containing either a Standing object or an array of Standing\n     * objects.\n     */\n    standings(compId) {\n        let self = this;\n        return new Promise((resolve, reject) => {\n            const url = `${this.url}standings/${compId}${this.auth}`;\n            this.getData('standings', compId, url, (2 * 3600 * 1000))\n                .then((standing) => resolve(\n                    createObject(Standing, self, standing)))\n                .catch((err) => reject(err));\n        });\n    }\n\n    /**\n     * returns one team in promise form\n     *\n     * @param {number} id - the id of the team\n     * @return {Promise<Team, Error>} returns a\n     * Promise containing  a Competition object.\n     */\n    team(id) {\n        let self = this;\n        return new Promise((resolve, reject) => {\n            id = (typeof id !== 'undefined' && id !== null) ? id : '';\n            const url = `${this.url}team/${id}${this.auth}`;\n            this.getData('teams', id, url, (2 * 3600 * 1000))\n                .then((team) => resolve(\n                    createObject(Team, self, team)))\n                .catch((err) => reject(err));\n        });\n    }\n\n    /**\n     * returns one player in promise form\n     *\n     * @param {number} id - the id of the player\n     * @return {Promise<Player, Error>} returns a\n     * Promise containing  a Player object.\n     */\n    player(id) {\n        let self = this;\n        return new Promise((resolve, reject) => {\n            id = (typeof id !== 'undefined' && id !== null) ? id : '';\n            const url = `${this.url}player/${id}${this.auth}`;\n            this.getData('players', id, url, (2 * 3600 * 1000))\n                .then((player) => resolve(\n                    createObject(Player, self, player)))\n                .catch((err) => reject(err));\n        });\n    }\n\n    /**\n     * returns live matches in promise form\n     *\n     * @return {Promise<Match[], Error>} returns a\n     * Promise containing  a Player object.\n     */\n    matches() {\n        let self = this;\n        let fromDate = new Date();\n        let toDate = new Date();\n        fromDate.setDate(fromDate.getDate() - 2);\n        toDate.setDate(toDate.getDate() + 7);\n\n        let fromDateString = createStringFromDate(fromDate);\n        let toDateString = createStringFromDate(toDate);\n\n        return new Promise((resolve, reject) => {\n            const url = `${this.url}matches${this.auth}`\n                + `&from_date=${fromDateString}`\n                + `&to_date=${toDateString}`;\n            this.getData('matches', 'all', url, (8000))\n                .then((matches) => resolve(\n                    createObject(Match, self, matches)))\n                .catch((err) => reject(err));\n        });\n    }\n\n    /**\n     *\n     * @param {*} type\n     * @param {*} id\n     * @param {*} url\n     * @param {*} time\n     *\n     * @return {*}\n     */\n    getData(type, id, url, time) {\n        return new Promise((resolve, reject) => {\n            this.checkCache(() => {\n                let cache = this.cacheManager[type];\n                let reqData;\n                if (\n                    cache[id] == undefined ||\n                    cache[id].expiration <= new Date().getTime()\n                ) {\n                    cache[id] = {\n                        request: true,\n                        expiration: new Date().getTime() + time,\n                    };\n                    getJSON(url)\n                        .then((data) => {\n                            resolve(data);\n                            reqData = data;\n                            return fs.ensureDir(`./.cache/${type}`);\n                        })\n                        .then(() => {\n                            fs.writeJSON(\n                                `./.cache/${type}/${id}.json`,\n                                reqData,\n                                {spaces: 4}\n                            );\n                            cache[id].request = false;\n                            fs.writeJSON(\n                                `./.cache/manager.json`,\n                                this.cacheManager,\n                                {spaces: 4}\n                            );\n                        })\n                        .catch((err) => {\n                            cache[id].request = false;\n                            fs.writeJSON(\n                                `./.cache/manager.json`,\n                                this.cacheManager,\n                                {spaces: 4}\n                            );\n                            reject(err);\n                        });\n                } else if (cache[id].request) {\n                    watch(cache[id], 'request', () => {\n                        if (!cache[id].request) {\n                            unwatch(cache[id], 'request');\n                            fs.readJSON(`./.cache/${type}/${id}.json`)\n                                .then((data) => resolve(data))\n                                .catch((err) => reject(err));\n                        }\n                    });\n                } else {\n                    fs.readJSON(`./.cache/${type}/${id}.json`)\n                        .then((data) => resolve(data))\n                        .catch((err) => reject(err));\n                }\n            });\n        });\n    }\n\n    /**\n     *\n     * @param {*} callback\n     */\n    checkCache(callback) {\n        if (!this.cacheManager.init[0]) {\n            if (!this.cacheManager.init[1]) {\n                this.cacheManager.init[1] = true;\n                fs.readJSON('./.cache/manager.json')\n                    .then((data) => {\n                        this.cacheManager.init[0] = true;\n                        this.cacheManager.init[1] = false;\n                        this.cacheManager = data;\n                        callback();\n                    })\n                    .catch(() => {\n                        this.cacheManager.init[0] = true;\n                        this.cacheManager.init[1] = false;\n                        callback();\n                    });\n            } else {\n            }\n        } else {\n            callback();\n        }\n    }\n};\n"]}