'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _standing = require('./standing');

var _standing2 = _interopRequireDefault(_standing);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/** Class representing a competition. */
var Competition = function () {
    /**
     * creates a **Competition** object
     *
     * @param {NodeScore} wrapper - the API wrapper object
     * @param {object} comp - competition from the JSON
     */
    function Competition(wrapper, comp) {
        _classCallCheck(this, Competition);

        var id = comp.id,
            name = comp.name,
            region = comp.region;


        this.wrapper = wrapper;
        this.id = parseInt(id);
        this.name = name;
        this.region = region;
    }

    /**
     * returns multiple **Standing** objects in promise form
     *
     * @return {Promise<Standing[], Error>} returns a Promise containing an
     * array of **Standing** objects.
     */


    _createClass(Competition, [{
        key: 'standings',
        value: function standings() {
            return this.wrapper.standings(this.id);
        }

        /** @return {*} */

    }, {
        key: 'toJSON',
        value: function toJSON() {
            var copy = Object.assign({}, this);
            delete copy.wrapper;

            return copy;
        }
    }]);

    return Competition;
}();

exports.default = Competition;
;
//# sourceMappingURL=competition.js.map