{"version":3,"sources":["../../src/lib/standing.js"],"names":["Standing","wrapper","standing","s","compId","parseInt","comp_id","season","round","stageId","stage_id","compGroup","comp_group","country","teamId","team_id","teamName","team_name","status","recentForm","recent_form","position","points","description","home","Home","away","Away","competition","team","wins","draws","losses","gamesPlayed","goalsScored","goalsAccepted","copy","Object","assign","home_w","home_d","home_l","home_gp","home_gs","home_ga","away_w","away_d","away_l","away_gp","away_gs","away_ga"],"mappings":"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","file":"standing.js","sourcesContent":["import Competition from './competition';\nimport Team from './team';\n\n/** Class representing team's standing. */\nexport default class Standing {\n    /**\n    *\n    * @param {NodeScore} wrapper - the API wrapper object\n    * @param {Object} standing - standing from the JSON\n    */\n    constructor(wrapper, standing) {\n        const s = standing;\n        this.wrapper = wrapper;\n        this.compId = parseInt(s.comp_id);\n        this.season = s.season;\n        this.round = s.round;\n        this.stageId = parseInt(s.stage_id);\n        this.compGroup = s.comp_group;\n        this.country = s.country;\n        this.teamId = parseInt(s.team_id);\n        this.teamName = s.team_name;\n        this.status = s.status;\n        this.recentForm = s.recent_form;\n        this.position = parseInt(s.position);\n        this.points = parseInt(s.points);\n        this.description = s.description;\n        this.home = new Home(s);\n        this.away = new Away(s);\n    }\n\n    /**\n     * returns the competition of this standing in promise form\n     *\n     * @return {Promise<Competition, Error>} returns a\n     * Promise containing a Competition object.\n     */\n    competition() {\n        return this.wrapper.competition(this.compId);\n    }\n\n    /**\n     * returns the team of this standing in promise form\n     *\n     * @return {Promise<Team, Error>} returns a\n     * Promise containing a Team object.\n     */\n    team() {\n        return this.wrapper.team(this.teamId);\n    }\n\n    /**\n     * returns total wins\n     * @return {number} total wins\n     */\n    wins() {\n        return parseInt(this.home.wins + this.away.wins);\n    };\n\n    /**\n     * returns total draws\n     * @return {number} total draws\n     */\n    draws() {\n        return parseInt(this.home.draws + this.away.draws);\n    };\n\n    /**\n     * returns total losses\n     * @return {number} total losses\n     */\n    losses() {\n        return parseInt(this.home.losses + this.away.losses);\n    };\n\n    /**\n     * returns total games played\n     * @return {number} total games played\n     */\n    gamesPlayed() {\n        return parseInt(this.home.gamesPlayed + this.away.gamesPlayed);\n    };\n\n    /**\n     * returns total goals scored\n     * @return {number} total goals scored\n     */\n    goalsScored() {\n        return parseInt(this.home.goalsScored + this.away.goalsScored);\n    };\n\n    /**\n     * returns total goals accepted\n     * @return {number} total goals accepted\n     */\n    goalsAccepted() {\n        return parseInt(this.home.goalsAccepted + this.away.goalsAccepted);\n    };\n\n    /**\n     * returns goal difference\n     * @return {number} goal difference\n     */\n    goalDifference() {\n        return parseInt(this.goalsScored() - this.goalsAccepted());\n    };\n\n    /** @return {*} */\n    toJSON() {\n        let copy = Object.assign({}, this);\n        delete copy.wrapper;\n\n        return copy;\n    }\n};\n\n/** Class representing team's standing statistics on the home side. */\nclass Home {\n    /**\n     * creates a **Home** object to be used as an inner class\n     * for the **Standing** class.\n     *\n     * @param {*} standing - standing from the JSON\n     */\n    constructor(standing) {\n        const s = standing;\n        this.wins = parseInt(s.home_w);\n        this.draws = parseInt(s.home_d);\n        this.losses = parseInt(s.home_l);\n        this.gamesPlayed = parseInt(s.home_gp);\n        this.goalsScored = parseInt(s.home_gs);\n        this.goalsAccepted = parseInt(s.home_ga);\n    }\n}\n\n/** Class representing team's standing statistics on the away side. */\nclass Away {\n    /**\n     * creates an **Away** object to be used as an inner class\n     * for the **Standing** class.\n     *\n     * @param {*} standing - standing from the JSON\n     */\n    constructor(standing) {\n        const s = standing;\n        this.wins = parseInt(s.away_w);\n        this.draws = parseInt(s.away_d);\n        this.losses = parseInt(s.away_l);\n        this.gamesPlayed = parseInt(s.away_gp);\n        this.goalsScored = parseInt(s.away_gs);\n        this.goalsAccepted = parseInt(s.away_ga);\n    }\n}\n"]}